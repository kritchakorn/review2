<template>
  <section class="section">
    <table class="table" style="width:100%">
      <thead>
        <tr>
          <th>Check</th>
          <th>Id</th>
          <th>Plaza Id</th>
          <th>Backup Status</th>
          <th><center>Control</center></th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="(data, index) in lists">
          <td>
            <input type="checkbox" :value="index" v-model="checkes">
            <label for="checkbox">{{ data.ipadderess }}</label>
          </td>
          <td>{{ data.id }}</td>
          <td>{{ data.name }}</td>
          <td><span :class="['tag', renderTag(data.status)]">{{ data.status }}</span></td>
          <td>
            <a class="button" @click="checkbackup(data, index)">Check Backup</a>
            <a class="button" @click="backupear(data, index)">Backup</a>
          </td>
        </tr>
      </tbody>
    </table>
    <a @class="btnClick" class="button is-info" @click="checkbackup2()">Check Backup</a>
    <a @class="btnClick" class="button is-success" @click="backupear2()">Backup</a>
  </section>
</template>
<script>
import Common from '@/helper/Common'
import jbossutil from '@/helper/jbossutil'

export default {
  created () {
    this.lists = Common.readfileconf()
  },
  data () {
    return {
      lists: [],
      showModal: false,
      email: '',
      password: '',
      checkes: []
    }
  },
  components: {

  },
  methods: {
    btnClick () {
      console.log(Common.hello())
    },
    backupear (data, index) {
      console.log('check jboss')
      console.log(data.ipaddress)
      var msg = ''
      jbossutil.backupjboss(data.ipaddress, 'bemhq', '@HQbem246').then((mssg) => {
        msg = mssg
        console.log('######success########' + mssg)
        if (msg === 'BACKUP') {
          console.log('set status' + msg)
          this.lists[index].status = 'BACKUP'
        } else if (msg === 'NO') {
          console.log('set status' + msg)
          this.lists[index].status = 'NO'
        } else {
          console.log('set status' + msg)
          this.lists[index].status = 'none'
        }
      }).catch((error) => {
        console.log('######error########' + error)
        msg = error
      })
    },
    backupear2 () {
      this.checkes.forEach((index) => {
        let data = this.lists[index]
        console.log('check jboss')
        console.log(data.ipaddress)
        var msg = ''
        jbossutil.backupjboss(data.ipaddress, 'bemhq', '@HQbem246').then((mssg) => {
          msg = mssg
          console.log('######success########' + mssg)
          if (msg === 'BACKUP') {
            console.log('set status' + msg)
            this.lists[index].status = 'BACKUP'
          } else if (msg === 'NO') {
            console.log('set status' + msg)
            this.lists[index].status = 'NO'
          } else {
            console.log('set status' + msg)
            this.lists[index].status = 'none'
          }
        }).catch((error) => {
          console.log('######error########' + error)
          msg = error
        })
      })
    },
    checkbackup  (data, index) {
      console.log('check jboss')
      console.log(data.ipaddress)
      var msg = ''
      jbossutil.checkbackupjboss(data.ipaddress, 'bemhq', '@HQbem246').then((mssg) => {
        msg = mssg
        console.log('######success' + msg + '123')
        this.lists[index].status = mssg
        if (mssg === 'BACKUP') {
          console.log('set status YES' + mssg)
          this.lists[index].status = 'BACKUP'
        } else if (mssg === 'NO') {
          console.log('set status NO' + mssg)
          this.lists[index].status = 'NO'
        } else if (mssg === 'ERROR') {
          console.log('set status ERROR ' + mssg)
          this.lists[index].status = 'ERROR'
        }
        // this.lists[index].status = mssg
      }).catch((error) => {
        console.log('######error########' + error)
      })
    },
    onCheckAction (data, index) {
      // data call cheeck jbossstatus
      this.lists[index].status = 'inactive'
      this.showModal = true
    },
    renderTag (status) {
      if (status === 'BACKUP') {
        return 'is-success'
      } else if (status === 'NO') {
        return 'is-danger'
      }
    },
    login () {
      console.log(this.email, this.password)
    },
    emailChange (email) {
      this.email = email
    },
    onFormChange (field, value) {
      this[field] = value
    },
    trim (str) {
      return this.str.replace(/^\s\s*/, '').replace(/\s\s*$/, '')
    }
  }
}

</script>

<style lang="css">

</style>
